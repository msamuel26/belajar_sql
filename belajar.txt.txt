Database adalah sekumpulan informasi yang di set up sedemikian rupa supaya mudah diakses, mudah dikelola dan mudah diupdate.

Di dalam database, kita akan meng-kelompok-kan data yang disimpan dalam tabel masing-masing sesuai kelompoknya


Contoh database sederhana (dalam sekolah) yaitu:
- Teman, terdiri dari: identitas (berupa nomor yang bersifat unik), nama, tanggal lahir, nomor telpon, alamat rumah

- Guru, terdiri dari: identitas (berupa nomor yang bersifat unik), nama, jenis kelamin, umur/tanggal lahir, mengajar mapel apa

- Mapel, terdiri dari: identitas (berupa nomor yang bersifat unik), nama

- Sepatu, terdiri dari: identitas (berupa nomor yang bersifat unik), merek, size, model



Hari ini belajar query dengan keyword 'select'
 dimana bisa juga memfilter atau menampilkan data tertentu yang kita inginkan


Keyword '*' digunakan untuk menampilkan semua kolom/data dalam definisi tabel
Contoh: select * from customers ('customers' merupakan definisi tabel)


Kita dapat memfilter data dalam tabel dengan menggunakan keyword 'where'
Contoh: select * from customers where first_name = 'John' 


Multi filter yang digunakan untuk meng-query data dalam tabel
Contoh: select * from customers where first_name = 'John' and age >= 25


Filter suatu data dalam tabel jika ingin menampilkan umur tertentu yang berjumlah lebih dari 1 menggunakan keyword 'in'
Contoh: select * from customers where first_name = 'John' and age in (21, 22)


Kita dapat menampilkan data/kolom tertentu dalam isi tabel
Contoh: select first_name, last_name, age from customers ('first_name', 'last_name' dan 'age' merupakan nama kolom dalam tabel)


Hari ini mempelajari fungsi max, min, sum, avg, count (hanya berlaku pada tipe data integer) dan 'group by' dalam SQL


max()
Contoh: select max(age) from customers (berarti menampilkan umur terbesar dalam kolom 'age' pada tabel 'customers')

min()
Contoh: select min(age) from customers (berarti menampilkan umur terkecil dalam kolom 'age' pada tabel 'customers')

sum()
Contoh: select sum(age) from customers (berarti menampilkan jumlah semua umur dalam kolom 'age' pada tabel 'customers')

avg()
Contoh: select avg(age) from customers (berarti menampilkan rata-rata dari jumlah semua umur dalam kolom 'age' pada tabel 'customers')

count() dan group by (age/umur)
Contoh: select count(*), age from customers group by age (berarti menampilkan berapa jumlah orang yang memiliki umur yang sama yang terdapat dalam kolom 'age')

avg() dan group by
Contoh: select avg(age), country from customers group by country (berarti menampilkan rata-rata umur berdasarkan orang yang negaranya sama)

count() and group by (country/negara)
Contoh: select count(*), country from customers group by country (berarti menampilkan berapa jumlah orang yang negaranya sama)



Hari ini belajar meng-query-kan multi agregat dalam 1 kali proses query (seperti sum, count, avg, min, max, dsb)

Contoh: 

select sum(amount),
       count(*),
       item 
  from orders 
 group by item 

 (query ini artinya menghitung jumlah harga/omset item dan berapa item yang terjual)

Mempelajari cara mengganti nama variabel agar dapat mudah dipahami (human-readable)
Contoh:  

select sum(amount) as jumlah_omzet, 
       count(*) as produk_terjual, 
       item as produk 
  from orders 
 group by item 

 (dimana nanti hasil outputnya terdapat nama kolom 'jumlah_omzet', 'produk_terjual', dan 'produk')


 Mempelajari cara menggabungkan 2 tabel berdasarkan kunci tertentu, dan mengurutkan tampilan data.

 Note: kita juga dapat membuat alias di nama tabel dan nama kolom yang bertujuan agar dapat mudah dipahami (human-readable)

 Contoh:

   select o.order_id,
          c.first_name as nama_depan,
          c.last_name as nama_belakang,
          o.item as produk,
          o.amount as harga_produk
     from customers c
     join orders o on (o.customer_id = c.customer_id)
 order by o.order_id



Hari ini mempelajari multi kolom dalam group by
Contoh:

select sum(amount),
	   count(*),
       item,
       customer_id
  from orders
 group by item, customer_id

Note: bahwa group by harus mencantumkan kolom yang tidak ada di-agregat, contoh disini adalah informasi 'item' dan 'customer_id'

Untuk menunjang proses belajar ini, kita dapat menambahkan data dalam tabel orders dengan perintah 'insert into', sebagai berikut:

  insert into orders (order_id, item, amount, customer_id) values (6, 'Keyboard', 500, 4);
  insert into orders (order_id, item, amount, customer_id) values (7, 'Keyboard', 550, 4);
  insert into orders (order_id, item, amount, customer_id) values (8, 'Keyboard', 600, 4);


Mempelajari multi join (menggabungkan multi tabel), dan multi order by
Contoh:

select o.order_id,
       c.first_name as nama_depan,
       c.last_name as nama_belakang,
       o.item as produk,
       o.amount as harga_produk,
       s.status as status_pengiriman
  from customers c
  join orders o on (o.customer_id = c.customer_id)
  join shippings s on (s.customer = c.customer_id)
 order by c.first_name, c.last_name


Mempelajari desc (descending), yaitu membalikkan urutan
Contoh:

select o.order_id,
       c.first_name as nama_depan,
       c.last_name as nama_belakang,
       o.item as produk,
       o.amount as harga_produk,
       s.status as status_pengiriman
  from customers c
  join orders o on (o.customer_id = c.customer_id)
  join shippings s on (s.customer = c.customer_id)
 order by o.order_id desc 



 C - Create (Insert into)
 R - Read (Select)
 U - Update (Update)
 D - Delete (Delete) 

Hari ini mempelajari C - Create (insert into) 
Contoh:

insert into customers (customer_id, first_name, last_name, age, country) values (6, 'Setipi', 'Cinguri', 7, 'ID');
insert into customers (customer_id, first_name, last_name, age, country) values (7, 'McPout', 'Nut', 45, 'ID');

(dengan rumus 'insert into' nama tabel (nama kolom yang diinginkan) values (isi kolom sesuai urutan)) 


insert into orders (order_id, item, amount, customer_id) values (6, 'CPU', 2500, 6);
insert into orders (order_id, item, amount, customer_id) values (7, 'Bag', 1000, 7);


insert into shippings (shipping_id, status, customer) values (6, 'Delivered', 6);
insert into shippings (shipping_id, status, customer) values (7, 'Pending', 7);



Hari ini mempelajari agregat distinct() yaitu menampilkan data yang tidak duplikat (sama seperti fungsi set() di python)
Contoh:

select distinct(country)
  from customers


Mempelajari keyword 'limit' dan 'offset'
Contoh:

select * 
  from customers
 order by order_id
 limit 3 offset 4

('limit 3 offset 4' yaitu berarti menampilkan sebanyak 3 data saja setelah id 4), hasilnya yaitu menampilkan id 5, 6, 7 dari tabel 'customers'


Mempelajari syntax U - Update (meng-update/mengubah data)
Contoh:

update orders 
   set amount = 700
 where item = 'Keyboard'

(berarti mengubah isi kolom 'amount' menjadi bernilai 700 dimana itemnya 'Keyboard')

Note: hati-hati saat melakukan 'update', harus terdapat klausul 'where', karena jika tidak, maka seluruh data dalam tabel akan diupdate 


Mempelajari syntx D - Delete (menghapus data)
Contoh:

delete from customers 
 where country = 'USA'

(berarti menghapus baris/data dimana terdapat kolom country yang berisi 'USA' pada tabel)